——创建版本库：
	mkdir 版本库名称
	cd 版本库名称（选择文件夹）
	pwd(显示当前目录)
	
——把目录变成可以管理的仓库
	git init
	
——把文件添加到仓库
	git add 文件
	
——把文件提交到仓库（可以一次提交多个文件）
	git commit -m "提交说明"
	
——查看仓库当前状态
	git status
	
——查看仓库文件内容
	git diff 文件
	
——显示最近到最远的提交日志
	git log
	git log --pretty=oneline(显示更简洁)
	
——回退到之前的版本
	git reset --hard 版本号
	
——查看文件内容
	cat 文件
	
——查看命令记录
	git reflog
	
——查看工作区和版本库区别
	git diff HEAD -- 文件名
	
——丢弃工作区的修改
	git checkout -- 文件名

——撤销暂存区的修改
	git reset HEAD 文件名

——删除文件
	rm 文件名

——从版本库删除文件
	git rm 文件名
	
——在本地仓库下运行命令连接到github仓库
	git remote add origin git@github.com:github用户名/github仓库名.git
	
——把本地库内容推送到远程库
//由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。
	git push -u origin master
	

——把本地master分支最新修改推送至github
	git push origin master

——克隆库到本地
	git clone git@github.com:gh用户名/gh仓库名.git

——显示库内文件
	ls
	

